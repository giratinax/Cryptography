#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

// Function to count letter frequencies in a string
void countLetterFrequencies(const char *text, int *frequencies) {
    for (int i = 0; text[i] != '\0'; i++) {
        if (isalpha(text[i])) {
            char ch = tolower(text[i]);
            frequencies[ch - 'a']++;
        }
    }
}

// Function to find the most frequent letter in the frequencies array
int findMostFrequentLetter(const int *frequencies) {
    int maxFrequency = 0;
    int mostFrequentLetter = 0;

    for (int i = 0; i < 26; i++) {
        if (frequencies[i] > maxFrequency) {
            maxFrequency = frequencies[i];
            mostFrequentLetter = i;
        }
    }

    return mostFrequentLetter;
}

// Function to decrypt a message given a mapping
void decryptMessage(const char *ciphertext, const int *mapping, char *decrypted) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char ch = tolower(ciphertext[i]);
            char decryptedChar = mapping[ch - 'a'] + 'a';
            decrypted[i] = isupper(ciphertext[i]) ? toupper(decryptedChar) : decryptedChar;
        } else {
            decrypted[i] = ciphertext[i];
        }
    }
}

int main() {
    const char *ciphertext = "Ymj qfgtbwx htrjymji yt ymj kwtr fsi nx f xjhwjy";

    // Initialize an array to store letter frequencies
    int frequencies[26] = {0};

    // Count letter frequencies in the ciphertext
    countLetterFrequencies(ciphertext, frequencies);

    // Find the most frequent letter in the ciphertext
    int mostFrequentLetter = findMostFrequentLetter(frequencies);

    // Assume that the most frequent letter in English is 'e'
    // Calculate the mapping based on the assumption
    int mapping[26];
    for (int i = 0; i < 26; i++) {
        mapping[i] = (i - mostFrequentLetter + 26) % 26;
    }

    // Decrypt the message using the calculated mapping
    char decrypted[100];
    decryptMessage(ciphertext, mapping, decrypted);

    // Print the decrypted message
    printf("Ciphertext: %s\n", ciphertext);
    printf("Decrypted: %s\n", decrypted);

    return 0;
}
